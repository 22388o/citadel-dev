#!/usr/bin/env bash
set -euo pipefail

show_help() {
  cat << EOF
umbrel-dev 0.0.0

Automatically initialize and manage an Umbrel development environment.

Usage: umbrel-dev <command> [options]

Commands:
    help                    Show this help message
    init                    Initialize an Umbrel development environment in the working directory
    boot                    Boot the development VM
    halt                    Halt the development VM
    destroy                 Destroy the development VM
    rebuild [<container>]   Rebuild all or a specific container
    run <command>           Run a command inside the development VM
    ssh                     Get an SSH session inside the development VM
EOF
}

check_dependencies() {
  for cmd in "git" "vagrant" "vboxmanage"; do
    if ! command -v $cmd >/dev/null 2>&1; then
      echo "This script requires Git, VirtualBox and Vagrant to be installed."
      echo
      echo "You can install them with brew:"
      echo
      echo "  brew install git"
      echo "  brew cask install vagrant virtualbox"
      exit 1
    fi
  done
}

# Initialize an Umbrel development environment in the working directory
init() {
  mkdir getumbrel
  git clone https://github.com/getumbrel/umbrel.git getumbrel/umbrel
}

# Boot the development VM
boot() {
  vagrant up
}

# Halt the development VM
halt() {
  vagrant halt
}

# Destroy the development VM
destroy() {
  vagrant destroy
}

# Run a command inside the development VM
run() {
  command=$1
  vagrant ssh -c "cd /vagrant/getumbrel/umbrel && $1"
}

# Get an SSH session inside the development VM
ssh() {
  run "bash"
}

# Show help text if no args set or help is called
if [[ -z ${1+x} ]] || [[ "$1" = "help" ]]; then
  show_help
  exit 1
fi

# Check deps before running any commands
check_dependencies

# Init
if [[ "$1" = "init" ]]; then
  init
  exit
fi

# Boot
if [[ "$1" = "boot" ]]; then
  shift
  boot
  exit
fi

# Halt
if [[ "$1" = "halt" ]]; then
  shift
  halt
  exit
fi

# Destroy
if [[ "$1" = "destroy" ]]; then
  shift
  destroy
  exit
fi

# Run
if [[ "$1" = "run" ]]; then
  shift
  run "$1"
  exit
fi

# SSH
if [[ "$1" = "ssh" ]]; then
  shift
  ssh
  exit
fi
